openapi: 3.0.0
info:
    title: Management API
    version: 1.0.0
    description: API for managing

servers:
    - url: http://localhost:3000/api

paths:
    /auth/login:
        post:
            summary: User login
            tags:
                - Authentication
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/LoginInput"
            responses:
                "200":
                    description: Login successful
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/LoginResponse"
                "401":
                    description: Incorrect username or password

    /v1/users:
        get:
            summary: Get all users
            tags:
                - Users
            security:
                - BearerAuth: []
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/User"
                "401":
                    description: Unauthorized
                "403":
                    description: Forbidden

    /v1/user/{id}:
        get:
            summary: Get user by ID
            tags:
                - Users
            security:
                - BearerAuth: []
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/User"
                "401":
                    description: Unauthorized
                "403":
                    description: Forbidden
                "404":
                    description: User not found

        patch:
            summary: Update user
            tags:
                - Users
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/UserInput"
            responses:
                "200":
                    description: User updated successfully
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/User"
                "400":
                    description: Invalid input
                "404":
                    description: User not found

        delete:
            summary: Delete user
            tags:
                - Users
            security:
                - BearerAuth: []
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            responses:
                "200":
                    description: User deleted successfully
                "401":
                    description: Unauthorized
                "403":
                    description: Forbidden
                "404":
                    description: User not found

    /v1/user:
        post:
            summary: Create new user
            tags:
                - Users
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/UserInput"
            responses:
                "201":
                    description: User created successfully
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/User"
                "400":
                    description: Invalid input

    /v1/products:
        get:
            summary: Get all products
            tags:
                - Products
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Product"

    /v1/product/{id}:
        get:
            summary: Get product by ID
            tags:
                - Products
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Product"
                "404":
                    description: Product not found

        patch:
            summary: Update product
            tags:
                - Products
            security:
                - BearerAuth: []
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/ProductInput"
            responses:
                "200":
                    description: Product updated successfully
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Product"
                "400":
                    description: Invalid input
                "401":
                    description: Unauthorized
                "403":
                    description: Forbidden
                "404":
                    description: Product not found

        delete:
            summary: Delete product
            tags:
                - Products
            security:
                - BearerAuth: []
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            responses:
                "200":
                    description: Product deleted successfully
                "401":
                    description: Unauthorized
                "403":
                    description: Forbidden
                "404":
                    description: Product not found

    /v1/product:
        post:
            summary: Create new product
            tags:
                - Products
            security:
                - BearerAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/ProductInput"
            responses:
                "201":
                    description: Product created successfully
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Product"
                "400":
                    description: Invalid input
                "401":
                    description: Unauthorized
                "403":
                    description: Forbidden

    /v1/categories:
        get:
            summary: Get all categories
            tags:
                - Categories
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Category"

    /v1/category/{id}:
        get:
            summary: Get category by ID
            tags:
                - Categories
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Category"
                "404":
                    description: Category not found

        patch:
            summary: Update category
            tags:
                - Categories
            security:
                - BearerAuth: []
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/CategoryInput"
            responses:
                "200":
                    description: Category updated successfully
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Category"
                "400":
                    description: Invalid input
                "401":
                    description: Unauthorized
                "403":
                    description: Forbidden
                "404":
                    description: Category not found

        delete:
            summary: Delete category
            tags:
                - Categories
            security:
                - BearerAuth: []
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            responses:
                "200":
                    description: Category deleted successfully
                "401":
                    description: Unauthorized
                "403":
                    description: Forbidden
                "404":
                    description: Category not found

    /v1/category:
        post:
            summary: Create new category
            tags:
                - Categories
            security:
                - BearerAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/CategoryInput"
            responses:
                "201":
                    description: Category created successfully
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Category"
                "400":
                    description: Invalid input
                "401":
                    description: Unauthorized
                "403":
                    description: Forbidden

components:
    schemas:
        User:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                email:
                    type: string
                role:
                    type: string

        UserInput:
            type: object
            properties:
                name:
                    type: string
                email:
                    type: string
                password:
                    type: string
                role:
                    type: string

        LoginInput:
            type: object
            required:
                - username
                - password
            properties:
                username:
                    type: string
                password:
                    type: string

        LoginResponse:
            type: object
            properties:
                token:
                    type: string

        Product:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                description:
                    type: string
                price:
                    type: number
                category:
                    $ref: "#/components/schemas/Category"

        ProductInput:
            type: object
            properties:
                name:
                    type: string
                description:
                    type: string
                price:
                    type: number
                category:
                    type: string

        Category:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string

        CategoryInput:
            type: object
            properties:
                name:
                    type: string

    securitySchemes:
        BearerAuth:
            type: http
            scheme: bearer
